{"version":3,"sources":["components/Navbar.js","components/Header.js","components/Card.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","currentScore","highScore","Header","concat","difficulty","onClick","chooseDifficulty","Card","key","id","game","alt","src","image","Footer","href","target","App","state","EasyScore","MediumScore","HardScore","message","gameData","selectedImages","classAnimation","mode","_this","setState","Easy","Medium","Hard","shuffle","i","length","j","Math","floor","random","_ref","find","pic","Object","toConsumableArray","setTimeout","_this2","this","components_Navbar","components_Header","map","data","components_Card","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec721e44.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = props => (\r\n    <div>\r\n        <nav className=\"navbar fixed-top p-3 mx-auto bg-info shadow\">\r\n            <div className=\"container\">\r\n                <h5 className=\"mx-auto text-white\">Score: {props.currentScore} | High Score: {props.highScore}</h5>\r\n            </div>\r\n        </nav>\r\n        \r\n    </div>\r\n);\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst Header = props => (\r\n    <div className=\"my-5 py-2\">\r\n        <div className=\"mt-4 container\">\r\n            <h1 className=\"display-4 text-center text-dark\">CLICKY</h1>\r\n            <h1 className=\"display-5 text-center text-dark\">MEMORY GAME</h1>\r\n            <p className=\"lead text-dark text-center\">Click an image to score a point, but don't click the same one more than once!</p>\r\n            <p className=\"lead text-dark text-center\">Choose a difficulty:</p>\r\n            <button className={`btn mx-1 ${props.difficulty === \"Easy\" ? \"btn-info\" : \"btn-outline-info\"}`} \r\n            onClick={() => props.chooseDifficulty(\"Easy\")}>\r\n            Easy</button>\r\n\r\n            <button className={`btn mx-1 ${props.difficulty === \"Medium\" ? \"btn-info\" : \"btn-outline-info\"}`} \r\n            onClick={() => props.chooseDifficulty(\"Medium\")}>\r\n            Medium</button>\r\n\r\n            <button className={`btn mx-1 ${props.difficulty === \"Hard\" ? \"btn-info\" : \"btn-outline-info\"}`} \r\n            onClick={() => props.chooseDifficulty(\"Hard\")}>\r\n            Hard</button>\r\n\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Card = props => (\r\n    <div className=\"mx-auto\">\r\n        <div key={props.id} onClick={() => props.game(props.id)} className=\"col-6 col-sm-6 col-md-3 my-3\">\r\n            <img className=\"rounded\" alt={props.id} src={props.image}></img>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nconst Footer = props => (\r\n    <footer className=\"mt-auto py-3\">\r\n        <div className=\"container\">\r\n            <span><a href=\"https://github.com/MMthree\" target=\"__blank\" className=\"text-muted\">GitHub@MMthree <i className=\"fab fa-github\"></i></a></span>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Easy from \"./easy.json\";\nimport Medium from \"./medium.json\";\nimport Hard from \"./hard.json\"\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\n\n\nclass App extends Component {\n  state={    \n    EasyScore: 0,\n    MediumScore: 0,\n    HardScore: 0,\n    currentScore: 0,\n    highScore: 0,\n    message: \"\",\n    difficulty: \"\",\n    gameData: \"\",\n    selectedImages: [],\n    classAnimation: \"\",\n  }\n\n  // Clicking the difficulty buttons will display the appropriate game mode images and reset the score\n  chooseDifficulty = mode => {\n    if (mode === \"Easy\") {\n      this.setState({ \n        currentScore: 0,\n        gameData: Easy, \n        message: \"\",\n        highScore: this.state.EasyScore\n      })\n    }\n    if (mode === \"Medium\") {\n      this.setState({ \n        currentScore: 0,\n        gameData: Medium,\n        message: \"\",\n        highScore: this.state.MediumScore\n      })\n    }\n    if (mode === \"Hard\") {\n      this.setState({ \n        currentScore: 0,\n        gameData: Hard,\n        message: \"\",\n        highScore: this.state.HardScore\n      })\n    }\n    this.setState({ \n      difficulty: mode,\n      selectedImages: [],\n    });\n  };\n\n  // Shuffle the order of the json images\n  shuffle = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return this.setState({ gameData: a });\n    \n  }\n\n\n  game = id => {\n    const find = this.state.selectedImages.find(pic => pic === id);\n\n    if ( id === find) {\n      this.setState({ \n        currentScore: 0,\n        message: \"Game over\",\n        classAnimation: \"\",\n        selectedImages: [],\n      });\n\n      if (this.state.difficulty === \"Easy\") {\n        this.setState({ \n          EasyScore: (this.state.currentScore > this.state.EasyScore) ? this.state.currentScore : this.state.EasyScore,\n        })\n      }\n      if (this.state.difficulty === \"Medium\") {\n        this.setState({ \n          MediumScore: (this.state.currentScore > this.state.MediumScore) ? this.state.currentScore : this.state.MediumScore,\n        })\n      }\n      if (this.state.difficulty === \"Hard\") {\n        this.setState({ \n          HardScore: (this.state.currentScore > this.state.HardScore) ? this.state.currentScore : this.state.HardScore,\n        })\n      }\n    } else {\n      this.setState({ \n        currentScore: this.state.currentScore +1,\n        message: \"Correct!\",\n        classAnimation: \"bounce\",\n        selectedImages: [...this.state.selectedImages, id],\n      });\n    }\n    this.shuffle(this.state.gameData);\n    setTimeout(() => {\n      this.setState({ classAnimation: \"\" });\n    }, 700);\n  };\n\n  render() {\n  return (\n    <div className=\"App\">\n  \n      <Navbar\n      currentScore={this.state.currentScore}\n      highScore={this.state.difficulty === \"Easy\" ? this.state.EasyScore :\n                  this.state.difficulty === \"Medium\" ? this.state.MediumScore :\n                  this.state.difficulty === \"Hard\" ? this.state.HardScore : 0}\n      />\n\n      <Header \n      chooseDifficulty={this.chooseDifficulty}\n      difficulty={this.state.difficulty}\n      />\n      \n\n      <div className={`text-center ${this.state.classAnimation}`}>\n          <h3 className=\"answer\">{this.state.message}</h3>\n      </div>\n      \n      <div className={`container ${this.state.message === \"Game over\" ? 'game-over' : ''}`}>\n        <div className=\"row\">\n          {this.state.gameData && this.state.gameData.map(data => { \n            return(\n              <Card \n              key={data.id}\n              game={this.game}\n              id={data.id}\n              image={data.image}\n              />\n            )\n          })}\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}